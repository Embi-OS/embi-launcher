#ifndef FILES_LOG_H
#define FILES_LOG_H

#include <QDebug>

#define FILESLOG_LEVEL_TRACE 0
#define FILESLOG_LEVEL_DEBUG 1
#define FILESLOG_LEVEL_INFO 2
#define FILESLOG_LEVEL_WARNING 3
#define FILESLOG_LEVEL_CRITICAL 4

#define FILESLOG_MIN_LEVEL FILESLOG_LEVEL_INFO

#define FILESLOG_NOTICE \
QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1C""FILES").debug

#define FILESLOG_TRACE \
    if(FILESLOG_MIN_LEVEL>FILESLOG_LEVEL_TRACE) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1B""FILES").debug
#define FILESLOG_DEBUG \
    if(FILESLOG_MIN_LEVEL>FILESLOG_LEVEL_DEBUG) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"FILES").debug
#define FILESLOG_INFO \
    if(FILESLOG_MIN_LEVEL>FILESLOG_LEVEL_INFO) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"FILES").info
#define FILESLOG_WARNING \
    if(FILESLOG_MIN_LEVEL>FILESLOG_LEVEL_WARNING) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"FILES").warning
#define FILESLOG_CRITICAL \
    if(FILESLOG_MIN_LEVEL>FILESLOG_LEVEL_CRITICAL) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"FILES").critical
#define FILESLOG_FATAL \
    QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"FILES").fatal

#endif // FILES_LOG_H
