#ifndef AXIONLOG_H
#define AXIONLOG_H

#include <QDebug>

#define AXIONLOG_LEVEL_TRACE 0
#define AXIONLOG_LEVEL_DEBUG 1
#define AXIONLOG_LEVEL_INFO 2
#define AXIONLOG_LEVEL_WARNING 3
#define AXIONLOG_LEVEL_CRITICAL 4

#define AXIONLOG_MIN_LEVEL AXIONLOG_LEVEL_INFO

#define AXIONLOG_NOTICE \
QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1C""AXION").debug

#define AXIONLOG_TRACE \
    if(AXIONLOG_MIN_LEVEL>AXIONLOG_LEVEL_TRACE) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1B""AXION").debug
#define AXIONLOG_DEBUG \
    if(AXIONLOG_MIN_LEVEL>AXIONLOG_LEVEL_DEBUG) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"AXION").debug
#define AXIONLOG_INFO \
    if(AXIONLOG_MIN_LEVEL>AXIONLOG_LEVEL_INFO) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"AXION").info
#define AXIONLOG_WARNING \
    if(AXIONLOG_MIN_LEVEL>AXIONLOG_LEVEL_WARNING) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"AXION").warning
#define AXIONLOG_CRITICAL \
    if(AXIONLOG_MIN_LEVEL>AXIONLOG_LEVEL_CRITICAL) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"AXION").critical
#define AXIONLOG_FATAL \
    QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"AXION").fatal

#endif // AXIONLOG_H
