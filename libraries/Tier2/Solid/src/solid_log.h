#ifndef SOLID_LOG_H
#define SOLID_LOG_H

#include <QDebug>

#define SOLIDLOG_LEVEL_TRACE 0
#define SOLIDLOG_LEVEL_DEBUG 1
#define SOLIDLOG_LEVEL_INFO 2
#define SOLIDLOG_LEVEL_WARNING 3
#define SOLIDLOG_LEVEL_CRITICAL 4

#define SOLIDLOG_MIN_LEVEL SOLIDLOG_LEVEL_INFO

#define SOLIDLOG_NOTICE \
QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1C""SOLID").debug

#define SOLIDLOG_TRACE \
    if(SOLIDLOG_MIN_LEVEL>SOLIDLOG_LEVEL_TRACE) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1B""SOLID").debug
#define SOLIDLOG_DEBUG \
    if(SOLIDLOG_MIN_LEVEL>SOLIDLOG_LEVEL_DEBUG) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"SOLID").debug
#define SOLIDLOG_INFO \
    if(SOLIDLOG_MIN_LEVEL>SOLIDLOG_LEVEL_INFO) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"SOLID").info
#define SOLIDLOG_WARNING \
    if(SOLIDLOG_MIN_LEVEL>SOLIDLOG_LEVEL_WARNING) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"SOLID").warning
#define SOLIDLOG_CRITICAL \
    if(SOLIDLOG_MIN_LEVEL>SOLIDLOG_LEVEL_CRITICAL) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"SOLID").critical
#define SOLIDLOG_FATAL \
    QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"SOLID").fatal

#endif // SOLID_LOG_H
