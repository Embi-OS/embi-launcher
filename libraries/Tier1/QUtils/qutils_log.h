#ifndef QQUTILSLOG_H
#define QQUTILSLOG_H

#include <QDebug>

#define QUTILSLOG_LEVEL_TRACE 0
#define QUTILSLOG_LEVEL_DEBUG 1
#define QUTILSLOG_LEVEL_INFO 2
#define QUTILSLOG_LEVEL_WARNING 3
#define QUTILSLOG_LEVEL_CRITICAL 4

#define QUTILSLOG_MIN_LEVEL QUTILSLOG_LEVEL_INFO

#define QUTILSLOG_NOTICE \
QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1C""QUTILS").debug

#define QUTILSLOG_TRACE \
    if(QUTILSLOG_MIN_LEVEL>QUTILSLOG_LEVEL_TRACE) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"\x1B""QUTILS").debug
#define QUTILSLOG_DEBUG \
    if(QUTILSLOG_MIN_LEVEL>QUTILSLOG_LEVEL_DEBUG) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"QUTILS").debug
#define QUTILSLOG_INFO \
    if(QUTILSLOG_MIN_LEVEL>QUTILSLOG_LEVEL_INFO) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"QUTILS").info
#define QUTILSLOG_WARNING \
    if(QUTILSLOG_MIN_LEVEL>QUTILSLOG_LEVEL_WARNING) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"QUTILS").warning
#define QUTILSLOG_CRITICAL \
    if(QUTILSLOG_MIN_LEVEL>QUTILSLOG_LEVEL_CRITICAL) {} \
    else QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"QUTILS").critical
#define QUTILSLOG_FATAL \
    QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC,"QUTILS").fatal

#endif // QQUTILSLOG_H
